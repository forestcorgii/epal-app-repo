{"version":3,"sources":["components/CognitoComponents/Signup/bl.js","adapters/CognitoAdapter/signup.js","components/CognitoComponents/Signup/index.js"],"names":["RegistrationFormBL","history","useHistory","validationSchema","yup","email","required","password","formik","useFormik","initialValues","onSubmit","values","userdata","callback","setSubmitting","success","username","replace","CognitoUserPool","poolData","signUp","err","result","alert","message","JSON","stringify","user","getUsername","console","log","Registration","className","handleSubmit","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","defaultChecked","to"],"mappings":"kOAIe,SAASA,IACvB,IAAMC,EAAUC,cAEVC,EAAmBC,IAAW,CACnCC,MAAOD,MAAaC,MAAM,wBAAwBC,SAAS,YAC3DC,SAAUH,MAAaE,SAAS,cAkBjC,MAAO,CAAEE,OAfMC,YAAU,CACxBC,cAAe,CAAEL,MAAO,GAAIE,SAAU,IACtCJ,iBAAkBA,EAClBQ,SAAU,SAACC,EAAD,GAAgC,ICVrBC,EAAUC,EDUVC,EAAoB,EAApBA,cCVAF,EDYbD,ECZuBE,EDYf,SAACE,EAAQC,GACfD,GAEFf,EAAQiB,QAAQ,wBAElBH,GAAc,IChBN,IAAII,IAAgBC,KA4B1BC,OACRR,EAASR,MACTQ,EAASN,SA7BU,GA+BnB,MAEA,SAAUe,EAAKC,GACd,GAAID,EACHE,MAAMF,EAAIG,SAAWC,KAAKC,UAAUL,QADrC,CAIA,IACML,EADYM,EAAOK,KACIC,cAC7BC,QAAQC,IAAI,gBAAkBd,GAC9BH,GAAS,EAAMG,W,kBC1CH,SAASe,IACvB,IAAQxB,EAAWR,IAAXQ,OACR,OACC,sBAAKyB,UAAU,YAAf,UACC,iCACC,sBAAKA,UAAU,8BAAf,UACC,8CACA,gCACC,uBAAMA,UAAU,oBAAoBtB,SAAUH,EAAO0B,aAArD,UACC,sBAAKD,UAAU,YAAf,UACC,sBAAMA,UAAU,eAAhB,0BACA,uBACCE,GAAG,QACHC,KAAK,QACLC,KAAK,OACLC,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOI,OAAOP,QAErBG,EAAOmC,QAAQtC,OAASG,EAAOoC,OAAOvC,MACtC,8BAAMG,EAAOoC,OAAOvC,QACjB,KAAM,IACV,0BACM,IACP,sBAAK4B,UAAU,YAAf,UACC,sBAAMA,UAAU,eAAhB,wBACA,uBACCE,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOI,OAAOL,WAErBC,EAAOmC,QAAQpC,UAAYC,EAAOoC,OAAOrC,SACzC,8BAAMC,EAAOoC,OAAOrC,WACjB,KAAM,IACV,0BACM,IACP,uBACA,qBAAK0B,UAAU,QAAf,SACC,kCACC,uBACCI,KAAK,QACLD,KAAK,YACLM,MAAM,QACNG,gBAAc,IALhB,gBAUD,qBAAKZ,UAAU,QAAf,SACC,kCACC,uBAAOI,KAAK,QAAQD,KAAK,YAAYM,MAAM,WAD5C,oBAIM,IACP,uBAAOL,KAAK,SAASK,MAAM,gBAlD7B,4BAoD0B,cAAC,IAAD,CAAMI,GAAG,IAAT,iCAI5B,uBACA,uBA7DD,IA6DQ","file":"static/js/6.19487803.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport {SignUp} from \"../../../adapters/CognitoAdapter/signup\"\r\nexport default function RegistrationFormBL() {\r\n\tconst history = useHistory();\r\n\r\n\tconst validationSchema = yup.object({\r\n\t\temail: yup.string().email(\"Invalid Email format\").required(\"Required\"),\r\n\t\tpassword: yup.string().required(\"Required\"),\r\n\t});\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: { email: \"\", password: \"\" },\r\n\t\tvalidationSchema: validationSchema,\r\n\t\tonSubmit: (values, { setSubmitting }) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tSignUp(values, (success,username) => {\r\n        if (success) {\r\n          // registration succeeded, create user profile to mongodb depending on the user type\r\n          history.replace(\"/cognito/verifyemail\");          \r\n        }\r\n        setSubmitting(false);\r\n\t\t\t});\r\n\t\t},\r\n\t});\r\n\r\n\treturn { formik };\r\n}\r\n","// ES Modules, e.g. transpiling with Babel\r\nimport { CognitoUserPool } from \"amazon-cognito-identity-js\";\r\n\r\nimport { poolData } from \"./index\";\r\n//\r\nexport function SignUp(userdata, callback) {\r\n\tvar userPool = new CognitoUserPool(poolData);\r\n\tvar attributeList = [];\r\n\r\n\t// var dataEmail = {\r\n\t//   Name: \"email\",\r\n\t//   Value: userdata.email,\r\n\t// };\r\n\r\n\t// var dataGroupName = {\r\n\t// \tName: \"group_name\",\r\n\t// \tValue: userdata.group_name,\r\n\t// };\r\n\r\n\t// var dataPhoneNumber = {\r\n\t//   Name: \"phone_number\",\r\n\t//   Value: userdata.phone_number,\r\n\t// };\r\n\r\n\t// var attributeEmail = new CognitoUserAttribute(dataEmail);\r\n\t// var attributePhoneNumber = new CognitoUserAttribute(\r\n\t//   dataPhoneNumber\r\n\t// );\r\n\t// var attributeGroupName = new CognitoUserAttribute(dataGroupName);\r\n\r\n\t// attributeList.push(attributeEmail);\r\n\t// attributeList.push(attributePhoneNumber);\r\n\t// attributeList.push(dataGroupName);\r\n\r\n\tuserPool.signUp(\r\n\t\tuserdata.email,\r\n\t\tuserdata.password,\r\n\t\tattributeList,\r\n\t\tnull,\r\n\r\n\t\tfunction (err, result) {\r\n\t\t\tif (err) {\r\n\t\t\t\talert(err.message || JSON.stringify(err));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cognitoUser = result.user;\r\n\t\t\tconst username = cognitoUser.getUsername();\r\n\t\t\tconsole.log(\"user name is \" + username);\r\n\t\t\tcallback(true, username);\r\n\t\t\t// var cognitoIdentityServiceProvider =\r\n\t\t\t// new AWS.CognitoIdentityServiceProvider();\r\n\r\n\t\t\t// var params = {\r\n\t\t\t//   GroupName: userdata.group_name, //your confirmed user gets added to this group\r\n\t\t\t//   UserPoolId: userPoolId,\r\n\t\t\t//   Username: cognitoUser.getUsername(),\r\n\t\t\t// };\r\n\r\n\t\t\t// if (userAttributes[\"custom:ManagerID\"]) {\r\n\t\t\t// cognitoIdentityServiceProvider.adminAddUserToGroup(\r\n\t\t\t// params\r\n\t\t\t// function (err, data) {\r\n\t\t\t// if (err) {\r\n\t\t\t//   callback(err); // uh oh, an error\r\n\t\t\t// }\r\n\r\n\t\t\t// callback(null, event); // yay! success\r\n\t\t\t// }\r\n\t\t\t// );\r\n\t\t\t// }\r\n\t\t}\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegistrationFormBL from \"./bl\";\r\n// import f from \"../merkado.png\";\r\nimport \"../../../assets/css/Pages.css\";\r\n\r\nexport default function Registration() {\r\n\tconst { formik } = RegistrationFormBL();\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<center>\r\n\t\t\t\t<div className=\"container-form-registration\">\r\n\t\t\t\t\t<h2>REGISTRATION</h2>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<form className=\"form-registration\" onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t<div className=\"input-box\">\r\n\t\t\t\t\t\t\t\t<span className=\"form-details\">First name: </span>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\t\t\t\tvalue={formik.values.email}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{formik.touched.email && formik.errors.email ? (\r\n\t\t\t\t\t\t\t\t\t<div>{formik.errors.email}</div>\r\n\t\t\t\t\t\t\t\t) : null}{\" \"}\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</div>{\" \"}\r\n\t\t\t\t\t\t\t<div className=\"input-box\">\r\n\t\t\t\t\t\t\t\t<span className=\"form-details\">Password: </span>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\t\t\t\tvalue={formik.values.password}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{formik.touched.password && formik.errors.password ? (\r\n\t\t\t\t\t\t\t\t\t<div>{formik.errors.password}</div>\r\n\t\t\t\t\t\t\t\t) : null}{\" \"}\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</div>{\" \"}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<div className=\"radio\">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"logged_as\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"BUYER\"\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"radio\">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"logged_as\" value=\"SELLER\" />\r\n\t\t\t\t\t\t\t\t\tRetail Owner\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>{\" \"}\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Register\" />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\tAlready have an account? <Link to=\"/\"> Login here</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</center>\r\n\t\t\t<br />\r\n\t\t\t<br /> <br />\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"sourceRoot":""}