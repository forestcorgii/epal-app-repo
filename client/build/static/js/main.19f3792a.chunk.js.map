{"version":3,"sources":["layout/MainNavigation.module.css","adapters/CognitoAdapter/signin.js","contexts/Auth.js","layout/MainNavigation.js","assets/img/merkado.png","components/CognitoComponents/Signin/index.js","components/CognitoComponents/Signin/bl.js","pages/CognitoPage.js","App.js","ApolloProvider.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","adapters/CognitoAdapter/index.js"],"names":["module","exports","getAttributes","result","attrs","i","UserAttributes","length","Name","Value","Username","AuthContext","createContext","user","login","userData","relogin","logout","authReducer","state","action","logged_as","type","authenticationData","callback","authenticationDetails","AuthenticationDetails","userPool","CognitoUserPool","poolData","Pool","cognitoUser","CognitoUser","authenticateUser","onSuccess","localStorage","setItem","getAccessToken","getJwtToken","AWS","region","credentials","IdentityPoolId","identityPoolId","Logins","authKey","getIdToken","refresh","error","console","log","getUserData","err","alert","message","JSON","stringify","onFailure","CognitoAdapter","payload","valid","getCurrentUser","getSession","session","isValid","getUserAttributes","attributes","getItem","signOut","AuthProvider","props","useReducer","dispatch","Provider","value","MainNavigation","className","classes","header","to","LoginForm","handleSubmit","history","useHistory","useContext","useEffect","push","e","preventDefault","val","target","username","Password","password","businessLogic","onSubmit","name","placeholder","required","checked","RegistrationForm","lazy","EmailVerificationForm","Login","useRouteMatch","path","url","email_verified","SellerHome","LogoutButton","onClick","window","location","reload","PrivateRoute","children","pathname","PublicRoute","App","Auth","fallback","exact","client","ApolloClient","uri","cache","InMemoryCache","headers","authorization","ApolloServer","ApolloProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","UserPoolId","ClientId"],"mappings":"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","file":"static/js/main.19f3792a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3Q9nj\",\"merkado-header\":\"MainNavigation_merkado-header__3aQSG\",\"active\":\"MainNavigation_active__XXkVu\",\"header-right\":\"MainNavigation_header-right__1FFQN\",\"nav\":\"MainNavigation_nav__3iF3s\"};","import * as AWS from \"aws-sdk/global\";\r\n\r\n// import * as xhr from \"../xhr/index\";\r\nimport { authKey, identityPoolId, poolData } from \"./index\";\r\n\r\nimport {\r\n\tAuthenticationDetails,\r\n\tCognitoUserPool,\r\n\tCognitoUser,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nexport function GetSession(callback) {\r\n\tvar userPool = new CognitoUserPool(poolData);\r\n\tvar cognitoUser = userPool.getCurrentUser();\r\n\tif (cognitoUser != null) {\r\n\t\tcognitoUser.getSession(function (err, session) {\r\n\t\t\tif (err) {\r\n\t\t\t\talert(err.message || JSON.stringify(err));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// xhr.setAccessKey(session.getAccessToken().getJwtToken());\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\"merkado-token\",\r\n\t\t\t\tsession.getAccessToken().getJwtToken()\r\n\t\t\t);\r\n\r\n\t\t\tconsole.log(\"session validity: \" + session.isValid());\r\n\r\n\t\t\t// NOTE: getSession must be called to authenticate user before calling getUserAttributes\r\n\t\t\tcognitoUser.getUserAttributes(function (err, attributes) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\t// Handle error\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Do something with attributes\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tAWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n\t\t\t\tIdentityPoolId: identityPoolId, // your identity pool id here\r\n\t\t\t\tLogins: {\r\n\t\t\t\t\t// Change the key below according to the specific region your user pool is in.\r\n\t\t\t\t\tauthKey: session.getIdToken().getJwtToken(),\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tcognitoUser.getUserData((err, result) => {\r\n\t\t\t\tif (!err) {\r\n\t\t\t\t\tresult = getAttributes(result);\r\n\t\t\t\t\tcallback(true, result);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback(false, {});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Instantiate aws sdk service objects now that the credentials have been updated.\r\n\t\t\t// example: var s3 = new AWS.S3();\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function SignIn(authenticationData, callback) {\r\n\tvar authenticationDetails = new AuthenticationDetails(authenticationData);\r\n\r\n\tvar userPool = new CognitoUserPool(poolData);\r\n\tvar userData = {\r\n\t\tUsername: authenticationData.Username,\r\n\t\tPool: userPool,\r\n\t};\r\n\tvar cognitoUser = new CognitoUser(userData);\r\n\r\n\tcognitoUser.authenticateUser(authenticationDetails, {\r\n\t\tonSuccess: function (result) {\r\n\t\t\t// xhr.setAccessKey(result.getAccessToken().getJwtToken());\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\"merkado-token\",\r\n\t\t\t\tresult.getAccessToken().getJwtToken()\r\n\t\t\t);\r\n\r\n\t\t\t//POTENTIAL: Region needs to be set if not already set previously elsewhere.\r\n\t\t\tAWS.config.region = \"us-east-1\";\r\n\r\n\t\t\tAWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n\t\t\t\tIdentityPoolId: identityPoolId, // your identity pool id here\r\n\t\t\t\tLogins: {\r\n\t\t\t\t\t// Change the key below according to the specific region your user pool is in.\r\n\t\t\t\t\t[authKey]: result.getIdToken().getJwtToken(),\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\t//refreshes credentials using AWS.CognitoIdentity.getCredentialsForIdentity()\r\n\t\t\tAWS.config.credentials.refresh((error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Instantiate aws sdk service objects now that the credentials have been updated.\r\n\t\t\t\t\t// example: var s3 = new AWS.S3();\r\n\t\t\t\t\tconsole.log(\"Successfully logged!\");\r\n\t\t\t\t\tcognitoUser.getUserData((err, result) => {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\talert(err.message || JSON.stringify(err));\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tresult = getAttributes(result);\r\n\t\t\t\t\t\tcallback(true, result);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonFailure: function (err) {\r\n\t\t\talert(err.message || JSON.stringify(err));\r\n\t\t\tcallback(false, {});\r\n\t\t},\r\n\t});\r\n}\r\n\r\nfunction getAttributes(result) {\r\n\tvar attrs = {};\r\n\tfor (let i = 1; i < result.UserAttributes.length; i++) {\r\n\t\tattrs[result.UserAttributes[i].Name] = result.UserAttributes[i].Value;\r\n\t}\r\n\treturn {\r\n\t\t...attrs,\r\n\t\tUsername: result.Username,\r\n\t};\r\n}\r\n\r\nexport function SignOut() {\r\n\tvar userPool = new CognitoUserPool(poolData);\r\n\tvar cognitoUser = userPool.getCurrentUser();\r\n\tif (cognitoUser != null) {\r\n\t\tcognitoUser.signOut();\r\n\t\tconsole.log(\"signed out\");\r\n\t}\r\n}\r\n","import { createContext, useReducer } from \"react\";\r\nimport * as CognitoAdapter from \"../adapters/CognitoAdapter/signin\";\r\nexport const AuthContext = createContext({\r\n\tuser: null,\r\n\tlogin: (userData) => {},\r\n\trelogin: () => {},\r\n\tlogout: () => {},\r\n});\r\nexport function authReducer(state, action) {\r\n\tlet userData;\r\n\tlet logged_as;\r\n\tswitch (action.type) {\r\n\t\tcase \"LOGIN\":\r\n\t\t\tCognitoAdapter.SignIn(action.payload, (valid, result) => {\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\tlogged_as = action.payload.logged_as;\r\n\t\t\t\t\tlocalStorage.setItem(\"merkado_logged_as\", logged_as);\r\n\t\t\t\t\t\r\n\t\t\t\t\tuserData ={ logged_as, ...result } ;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn { ...state, user: userData};\r\n\t\tcase \"RELOGIN\":\r\n\t\t\tCognitoAdapter.GetSession((valid, result) => {\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\tlogged_as = localStorage.getItem(\"merkado_logged_as\");\r\n\t\t\t\t\tuserData ={ logged_as, ...result } ;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn { ...state, user: userData};\r\n\t\tcase \"LOGOUT\":\r\n\t\t\tCognitoAdapter.SignOut();\r\n\t\t\treturn { ...state, user: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\nexport function AuthProvider(props) {\r\n\tconst [state, dispatch] = useReducer(authReducer, {\r\n\t\tuser: null\r\n\t});\r\n\r\n\tfunction login(userData) {\r\n\t\tdispatch({ type: \"LOGIN\", payload: userData });\r\n\t}\r\n\tfunction relogin() {\r\n\t\tdispatch({ type: \"RELOGIN\" });\r\n\t}\r\n\tfunction logout() {\r\n\t\tdispatch({ type: \"LOGOUT\" });\r\n\t}\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{ user: state.user, login, logout, relogin }}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n","import {Link} from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\n\r\n\r\nfunction MainNavigation(){\r\n    return(\r\n        \r\n    <header className={classes.header}>\r\n\r\n            <div className=\"merkado-header\">\r\n             <Link to ='/' >MERKADO</Link>\r\n            </div>\r\n            \r\n            <div className=\"header-right\">\r\n                <div className=\"Nav\">\r\n                     <Link to ='/'>Products</Link>\r\n                </div>\r\n                <div className=\"Nav\">\r\n                     <Link to ='/Login'>Login</Link>\r\n                </div>\r\n                <div className=\"Nav\">\r\n                     <Link to ='/SellerInfo'>SellerInfo</Link>\r\n                </div>\r\n                <div className=\"Nav\">\r\n                    <Link to ='/SellerPage'>SellerPage</Link>\r\n            </div>\r\n                   \r\n              \r\n                  \r\n                \r\n                  \r\n                \r\n                   \r\n           \r\n            </div>\r\n        \r\n\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default MainNavigation;","export default __webpack_public_path__ + \"static/media/merkado.2f312114.png\";","import React from \"react\";\r\n\r\nimport businessLogic from \"./bl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport f from \"../../../assets/img/merkado.png\";\r\nimport \"../../../assets/css/Pages.css\";\r\nexport default function LoginForm() {\r\n\tconst { handleSubmit } = businessLogic();\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<center>\r\n\t\t\t<br /><br /><br />\r\n\t\t\t\t<div className=\"container-form1\">\r\n\t\t\t\t<br /><br />\r\n\t\t\t\t\t<center>\r\n\t\t\t\t\t\t<h1>LOGIN</h1>\r\n\t\t\t\t\t</center>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"container-form-login\">\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\tUSERNAME:{\" \"}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Username\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t></input>{\" \"}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tPASSWORD:{\" \"}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t\t<div className=\"radio\">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"logged_as\" value=\"BUYER\" checked={true} />\r\n\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"radio\">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"logged_as\" value=\"SELLER\" />\r\n\t\t\t\t\t\t\t\t\tRetail Owner\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button className=\"button-login\" type=\"submit\" value=\"LOGIN\">LOGIN\r\n\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</center>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\tDon't have account yet?{\" \"}\r\n\t\t\t\t\t\t<Link to=\"/cognito/signup\">Register here</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</center>\r\n\t\t\t<br/><br/><br/><br/><br/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useContext,useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {AuthContext} from \"../../../contexts/Auth\";\r\n\r\n\r\nexport default function LoginFormBL() {\r\n\tlet history = useHistory();\r\n\tconst { user, relogin, login } = useContext(AuthContext);\r\n\tuseEffect(() => {\r\n\t\tif (!user) {\r\n\t\t\trelogin();\r\n\t\t}\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\thistory.push(\"/\");\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const val = {\r\n      Username: e.target.username.value,\r\n      Password: e.target.password.value,\r\n\t\tlogged_as:e.target.logged_as.value\r\n    };\r\n\r\n\t  login(val);\r\n\t  history.push(\"/\")\r\n  }\r\n  return { handleSubmit };\r\n}\r\n","// import env from \"react-dotenv\"\r\nimport React, { lazy, useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../contexts/Auth\";\r\nimport LoginForm from \"../components/CognitoComponents/Signin/index\";\r\n\r\nconst RegistrationForm = lazy(() =>\r\n  import(\"../components/CognitoComponents/Signup/index\")\r\n);\r\nconst EmailVerificationForm = lazy(() =>\r\n  import(\"../components/CognitoComponents/EmailVerification/index\")\r\n);\r\n\r\nexport default function Login() {\r\n  let { path, url } = useRouteMatch();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Router>\r\n      {user && user.Username && !user.email_verified ? <Redirect to={`${url}/verifyemail`} /> : null}\r\n\r\n      <Switch>\r\n        <Route path={`${path}/signup`}>\r\n          <RegistrationForm />\r\n        </Route>\r\n        <Route path={`${path}/verifyemail`}>\r\n          <EmailVerificationForm />\r\n        </Route>\r\n        <Route path={`${path}/`}>\r\n          <LoginForm />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\tRedirect,\r\n} from \"react-router-dom\";\r\nimport React, { lazy, Suspense, useContext } from \"react\";\r\n\r\nimport MainNavigation from \"./layout/MainNavigation\";\r\nimport { AuthProvider, AuthContext } from \"./contexts/Auth\";\r\n\r\n// import AboutHome from \"./pages/AboutHome\";\r\n// import BuyerInfo from \"./pages/Buyer/BuyerInfo\";\r\n// import Checkout from \"./pages/Buyer/Checkout\";\r\n// import HowToPage from \"./pages/HowToPage\";\r\n// import Locate from \"./pages/Buyer/Locate\";\r\n// import Order from \"./pages/Buyer/Order\";\r\n// import Products from \"./pages/Seller/Products\";\r\n// import SellerInfo from \"./pages/Seller/SellerInfo\";\r\n// import SellerPage from \"./pages/Seller/SellerPage\";\r\n\r\nimport Cognito from \"./pages/CognitoPage\";\r\nconst SellerHome = lazy(() => import(\"./pages/Seller/HomePage\"));\r\n// const BuyerHome = lazy(() => import(\"./pages/Buyer/HomePage\"));\r\nfunction App() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AuthProvider>\r\n\t\t\t\t<LogoutButton/>\r\n\t\t\t\t<Suspense fallback={<div>Loading..</div>}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t <MainNavigation />\r\n\t\t\t\t\t\t{/* {user && user.logged_as === \"SELLER\" ? (\r\n\t\t\t\t\t\t\t<Redirect to=\"seller\" />\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t// <BuyerHome />\r\n\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/\" exact>\r\n\t\t\t\t\t\t\t\t<SellerHome />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/buyer\">\r\n\t\t\t\t\t\t\t\t<p>BUYER</p>\r\n\t\t\t\t\t\t\t\t{/* <BuyerHome /> */}\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t{/* <PrivateRoute path=\"/\" exact>\r\n\t\t\t\t\t\t\t\t<Products />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<Route path=\"/buyerinfo\">\r\n\t\t\t\t\t\t\t\t<BuyerInfo />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/checkout\">\r\n\t\t\t\t\t\t\t\t<Checkout />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/howtopage\">\r\n\t\t\t\t\t\t\t\t<HowToPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/locate\">\r\n\t\t\t\t\t\t\t\t<Locate />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/order\">\r\n\t\t\t\t\t\t\t\t<Order />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/sellerInfo\">\r\n\t\t\t\t\t\t\t\t<SellerInfo />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/sellerPage\">\r\n\t\t\t\t\t\t\t\t<SellerPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/Login\">\r\n\t\t\t\t\t\t\t\t<UserLogin />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/userRegistration\">\r\n\t\t\t\t\t\t\t\t<UserRegistration />\r\n\t\t\t\t\t\t\t</Route> */}\r\n\t\t\t\t\t\t\t<PublicRoute path=\"/cognito\">\r\n\t\t\t\t\t\t\t\t<Cognito />\r\n\t\t\t\t\t\t\t</PublicRoute>\r\n\t\t\t\t\t\t\t{/* <PublicRoute path=\"/AboutUs\">\r\n\t\t\t\t\t\t\t\t<AboutHome />\r\n\t\t\t\t\t\t\t</PublicRoute> */}\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</Suspense>\r\n\t\t\t</AuthProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction LogoutButton() {\r\n\tconst { logout } = useContext(AuthContext);\r\n\treturn (<button onClick={() => { logout(); window.location.reload()}}>Logout</button>)\r\n}\r\n\r\nfunction PrivateRoute({ children, ...props }) {\r\n\tconst { user } = useContext(AuthContext);\r\n\tconsole.log(\"private route \" + JSON.stringify(user));\r\n\treturn (\r\n\t\t<Route {...props}>\r\n\t\t\t{user && user.Username && user.email_verified ? (\r\n\t\t\t\tchildren\r\n\t\t\t) : (\r\n\t\t\t\t<Redirect to={{ pathname: \"/cognito\" }} />\r\n\t\t\t)}\r\n\t\t</Route>\r\n\t);\r\n}\r\n\r\nfunction PublicRoute({ children, ...props }) {\r\n\tconst { user } = useContext(AuthContext);\r\n\tconsole.log(\"public route \" + JSON.stringify(user));\r\n\treturn (\r\n\t\t<Route {...props}>\r\n\t\t\t{user && user.email_verified ? (\r\n\t\t\t\tuser.logged_as === \"SELLER\" ? (\r\n\t\t\t\t\t<Redirect to={{ pathname: \"/\" }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect to={{ pathname: \"/buyer\" }} />\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\tchildren\r\n\t\t\t)}\r\n\t\t</Route>\r\n\t);\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  // uri: \"http://localhost:3001\",\r\n  uri: \"https://r1r6ml88e5.execute-api.us-east-1.amazonaws.com/dev/\",\r\n\tcache: new InMemoryCache(),\r\n\theaders:{\r\n\t  authorization: localStorage.getItem('merkado-token') || ''\r\n  }\r\n});\r\n\r\nexport default function ApolloServer() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ApolloProvider />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n\r\nreportWebVitals();\r\n","// import env from \"react-dotenv\";\r\nexport var poolData = {\r\n  UserPoolId:process.env.REACT_APP_USER_POOL_ID||'', // Your user pool id here\r\n  ClientId: process.env.REACT_APP_APP_CLIENT_ID||'', // Your client id here\r\n};\r\n\r\nexport var identityPoolId = process.env.REACT_APP_IDENTITY_POOL_ID||'';\r\nexport var authKey = `cognito-idp.${process.env.REACT_APP_AWS_REGION||''}.amazonaws.com/${process.env.REACT_APP_USER_POOL_ID||''}`;\r\n"],"sourceRoot":""}